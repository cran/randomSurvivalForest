Package: randomSurvivalForest
Version: 3.0.0
BUILD: bld20070729

---------------------------------------------------------------------------------
CHANGES TO RELEASE 3.0.0

Release 3.0.0 represents a major upgrade in the functionality of the
2.x releases.  Key changes are as follows:

o Missing data can be imputed in both grow and predict mode.  This
  applies to variables as well as time and censoring outcome values.
  Values are imputed dynamically as the tree is grown using a new tree
  imputation methodology.  This produces an imputed forest which can be
  used for prediction purposes on test data sets with missing data.

o Importance values for variables are returned in predict mode when test
  data contains outcomes as well as variables.

o Fixed some bugs in plot.variable().  Thanks to Andy J. Minn for pointing this out.

o Minor modification of PMML representation of RSF forest output to accomodate
  imputation.  The method of random seed chain recovery has been altered.
  Note that forests produced with prior releases will have to be 
  regenerated using this release.  We apologize for the inconvenience.

---------------------------------------------------------------------------------

Release 2.1.0 represents a minor upgrade of the product, and will not affect
most users of the prior version of the product.  Key changes are as follows:

o R 2.5.0 compliance issues and necessitated modifications.

o Modification of PMML representation of RSF forest output.  The RSF custom
  extension has been moved from the DataDictionary node to a new
  MiningBuildTask node.  Note that forests produced with Release 2.0.0 will
  have to be regenerated using Release 2.1.0.  We apologize for the 
  inconvenience.

o Fast processing of data involving large numbers of predictors (as in
  many genomic examples) by using the option big.data=TRUE.  This
  option bypasses the huge overhead needed by R in creating design
  matrices and parsing formula.  However, users should be aware of
  some side effects.  See the RSF help file for more details.  Thanks
  to Steven (Xi) Chen for pointing out the problem.

o Only the top 100 predictors are now printed to the terminal when
  calling plot.error().  This deals with settings as above when one
  might have thousands of predictors.

o Introduced a new wrapper "find.interaction()" for testing of
  pairwise interactions between predictors.  

---------------------------------------------------------------------------------

Release 2.0.0 represents a major upgrade in the functionality and stability
of the original 1.0.0 release.  Key changes are as follows:

o Two new splitting rules, 'logrankscore' and 'logrankapprox', added.  

o Expanded output from 'rsf()'.  Now out-of-bag objects 'oob.ensemble' and
  'oob.mortality' are included in addition to the full ensemble objects 
  'ensemble' and 'mortality'.

o Importance values for predictors can now be calculated (set 'importace = TRUE' 
  in the initial 'rsf()' call).  Extended 'plot.error()' to print, as well as plot,
  such values.

o Prediction on test data can now be implemented using 'rsf.predict()' (set
  'forest = TRUE' in the initial 'rsf()' call).

o Included option 'predictorWt' used for weighted sampling of predictors when
  growing a tree.

o Formula no longer restricted to main effects.  Formula for 'rsf' interpreted
  as in typical R applications.  However, users should be aware that including
  interactions or higher order terms in a formula may not be an optimal way to
  grow a forest.

o Three types of objects are generated in an RSF analysis: '(rsf, grow)', 
  '(rsf, predict)' and '(rsf, forest)'.  Wrappers handle each type of object
  in different ways.

o Improved error checking in all wrappers.

o Extended 'plot.variable()' wrapper to generate parial plots for predictors.

o Improved control over trace output.  See the 'do.trace' option in 'rsf()'.

o Implements the Predictive Model Markup Language specification for an 
  '(rsf, forest)' forest object.  PMML is an XML based language which
  provides a way for applications to define statistical and data mining
  models and to share models between PMML compliant applications.  More
  information about PMML and the Data Mining Group can be found at
  http://www.dmg.org.  Our implementation gives the user the ability to
  save the geometry of a forest as a PMML XML document for export or
  later retrieval.

---------------------------------------------------------------------------------
